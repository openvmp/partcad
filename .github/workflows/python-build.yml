name: CD on Linux, MacOS and Windows

on:
  push:
    branches: ["main", "devel"]
  pull_request:
    branches: ["main", "devel"]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    if: "!startsWith(github.event.head_commit.message, 'Version updated')"
    env:
      BIN_DIR: ${{ matrix.os == 'windows-latest' && 'Scripts' || 'bin' }}

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Prepare environments
        run: |
          python -m pip install --upgrade pip build
          mkdir .venv
          python -m venv .venv/build
          (. .venv/build/${{ env.BIN_DIR }}/activate && python -m pip install --upgrade pip build && deactivate)
          python -m venv .venv/build-cli
          (. .venv/build-cli/${{ env.BIN_DIR }}/activate && python -m pip install --upgrade pip build && deactivate)
          python -m venv .venv/install
          (. .venv/install/${{ env.BIN_DIR }}/activate && python -m pip install --upgrade pip build && deactivate)
      - name: Test building and packaging
        run: |
          cp LICENSE.txt apache20.svg partcad
          cp LICENSE.txt apache20.svg README.md partcad-cli
          (. .venv/build/${{ env.BIN_DIR }}/activate && cd partcad && python -m build && cd .. && deactivate)
          (. .venv/build-cli/${{ env.BIN_DIR }}/activate && python -m pip install -r partcad/requirements.txt && deactivate)
          (. .venv/build-cli/${{ env.BIN_DIR }}/activate && python -m pip install --no-index --find-links=partcad/dist partcad && deactivate)
          (. .venv/build-cli/${{ env.BIN_DIR }}/activate && cd partcad-cli && python -m build && cd .. && deactivate)
      - name: Test installation
        run: |
          (. .venv/install/${{ env.BIN_DIR }}/activate && python -m pip install -r partcad/requirements.txt     && deactivate)
          (. .venv/install/${{ env.BIN_DIR }}/activate && python -m pip install --no-index --find-links=partcad/dist     partcad && deactivate)
          (. .venv/install/${{ env.BIN_DIR }}/activate && python -m pip install -r partcad-cli/requirements.txt && deactivate)
          (. .venv/install/${{ env.BIN_DIR }}/activate && python -m pip install --no-index --find-links=partcad-cli/dist partcad-cli && deactivate)
      - name: Build documentation
        run: |
          python -m pip install -r ./requirements.txt
          sphinx-build  -M html docs/source docs/build -n -W
