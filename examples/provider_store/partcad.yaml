desc: Example of a shop provider implemented using a CSV file.

docs:
  intro: |
    This examples demostrates how to implement a provider of the type 'store'.
    While this example uses a file, the providers are expected to uses online
    services for accessing up-to-date part availability data.
    However the use of a static file is acceptable too: the most of customers
    are expected to refresh the file every 24 hours (PartCAD's default
    dependency update strategy).
  usage: |
    Find a provider to order 25 nuts from:
    ```shell
    $ pc supply find --provider myGarage /pub/robotics/parts/gobilda:hardware/nut_m4_0_7mm#25
    ...
    INFO:  The requested parts are available through the following suppliers:
    INFO:  /pub/robotics/parts/gobilda:hardware/nut_m4_0_7mm#25:
    		/pub/examples/partcad/provider_store:myGarage
    ...
    ```

    Ask for too much (26 parts while the store has only 25 in stock) and find nothing:
    ```shell
    $ pc supply find --provider myGarage /pub/robotics/parts/gobilda:hardware/nut_m4_0_7mm#26
    ...
    ERROR: Provider /pub/examples/partcad/provider_store:myGarage cannot provide /pub/robotics/parts/gobilda:hardware/nut_m4_0_7mm.
    ...
    ```

    Get a quote for a minimum order to get 1 part:
    ```shell
    $ pc supply quote --provider myGarage /pub/robotics/parts/gobilda:hardware/nut_m4_0_7mm#1
    ...
    INFO:  The following quotes are received:
    INFO:  		/pub/examples/partcad/provider_store:myGarage: 123456: $0.01
    INFO:  			/pub/robotics/parts/gobilda:hardware/nut_m4_0_7mm#1
    ...
    ```

    Use the quote in a script:
    ```shell
    $ pc -q supply quote --provider myGarage --json /pub/robotics/parts/gobilda:hardware/nut_m4_0_7mm#1 | jq '.[] | .result | .price' -
    0.01
    ```

    Make an order (assuming the cart id is '123456') before the quote expires:
    ```shell
    $ pc supply order 123456
    ```

providers:
  myGarage:
    type: enrich
    source: csvFile
    with:
      currency: USD
      file: stock.csv

    # TODO(clairbee): add a feature to download the file
    # path: stock.csv
    # fileFrom: url
    # fileUrl: https://example.com/stock.csv

    # TODO(clairbee): add markets
    # market: /pub/geo/us:california

  csvFile:
    type: store
    parameters:
      file:
        type: string
        default: csv.csv
      currency:
        type: string
        default: USD

render:
  readme:
